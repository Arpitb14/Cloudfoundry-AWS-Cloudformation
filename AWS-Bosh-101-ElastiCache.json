{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "ElastiCache",

  "Parameters": {
    "DeploymentName": {
      "Type": "String",
      "Description": "Deployment Name",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern": "^([A-Za-z0-9]+[A-Za-z0-9-]?)+[A-Za-z0-9]$",
      "ConstraintDescription": "Must be a valid domain label matching /^([A-Za-z0-9]+[A-Za-z0-9-])+[A-Za-z0-9]$/"
    },

    "CreateElastiCacheInfrastructure": {
      "Type": "String",
      "Default": "true",
      "Description": "Create ElastiCache Networks",
      "AllowedValues": [ "true", "false" ]
    },
    "ElastiCacheAz1Cidr": {
      "Type": "String",
      "Default": "10.0.20.0/24",
      "Description": "ElastiCache AZ1 CIDR",
      "AllowedPattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2}$",
      "ConstraintDescription": "Valid CIDR"
    },
    "Peer1VpcId": {
      "Type": "String",
      "Default": "",
      "Description": "VPC Peer ID 1",
      "AllowedPattern": "^(vpc-[a-f0-9]{8})?$",
      "ConstraintDescription": "Valid VPC ID or empty"
    },
    "Peer2VpcId": {
      "Type": "String",
      "Default": "",
      "Description": "VPC Peer ID 2",
      "AllowedPattern": "^(vpc-[a-f0-9]{8})?$",
      "ConstraintDescription": "Valid VPC ID or empty"
    },
    "Peer3VpcId": {
      "Type": "String",
      "Default": "",
      "Description": "VPC Peer ID 3",
      "AllowedPattern": "^(vpc-[a-f0-9]{8})?$",
      "ConstraintDescription": "Valid VPC ID or empty"
    },
    "Peer4VpcId": {
      "Type": "String",
      "Default": "",
      "Description": "VPC Peer ID 4",
      "AllowedPattern": "^(vpc-[a-f0-9]{8})?$",
      "ConstraintDescription": "Valid VPC ID or empty"
    },
    "Peer1OwnerId": {
      "Type": "String",
      "Default": "",
      "Description": "Peer 1 Owner Account Id",
      "AllowedPattern": "^[0-9]*$",
      "ConstraintDescription": "Peer Owner Id or empty"
    },
    "Peer2OwnerId": {
      "Type": "String",
      "Default": "",
      "Description": "Peer 2 Owner Account Id",
      "AllowedPattern": "^[0-9]*$",
      "ConstraintDescription": "Valid CIDR or empty"
    },
    "Peer3OwnerId": {
      "Type": "String",
      "Default": "",
      "Description": "Peer 3 Owner Account Id",
      "AllowedPattern": "^[0-9]*$",
      "ConstraintDescription": "Valid CIDR or empty"
    },
    "Peer4OwnerId": {
      "Type": "String",
      "Default": "",
      "Description": "Peer 4 Owner Account Id",
      "AllowedPattern": "^[0-9]*$",
      "ConstraintDescription": "Valid CIDR or empty"
    },
    "Peer1RoleArn": {
      "Type": "String",
      "Default": "",
      "Description": "Peer 1 Role ARN",
      "AllowedPattern": "^(arn:aws:iam::[0-9]+:[a-z]*/[A-Za-z0-9-]+)?$",
      "ConstraintDescription": "Peer 1 ARN or empty"
    },
    "Peer2RoleArn": {
      "Type": "String",
      "Default": "",
      "Description": "Peer 2 Role ARN",
      "AllowedPattern": "^(arn:aws:iam::[0-9]+:[a-z]*/[A-Za-z0-9-]+)?$",
      "ConstraintDescription": "Peer 2 ARN or empty"
    },
    "Peer3RoleArn": {
      "Type": "String",
      "Default": "",
      "Description": "Peer 3 Role ARN",
      "AllowedPattern": "^(arn:aws:iam::[0-9]+:[a-z]*/[A-Za-z0-9-]+)?$",
      "ConstraintDescription": "Peer 3 ARN or empty"
    },
    "Peer4RoleArn": {
      "Type": "String",
      "Default": "",
      "Description": "Peer 4 Role ARN",
      "AllowedPattern": "^(arn:aws:iam::[0-9]+:[a-z]*/[A-Za-z0-9-]+)?$",
      "ConstraintDescription": "Peer 4 ARN or empty"
    },
    "Peer1VpcCidr": {
      "Type": "String",
      "Default": "",
      "Description": "VPC Peer CIDR 1",
      "AllowedPattern": "^(([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2})?$",
      "ConstraintDescription": "Valid CIDR or empty"
    },
    "Peer2VpcCidr": {
      "Type": "String",
      "Default": "",
      "Description": "VPC Peer CIDR 2",
      "AllowedPattern": "^(([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2})?$",
      "ConstraintDescription": "Valid CIDR or empty"
    },
    "Peer3VpcCidr": {
      "Type": "String",
      "Default": "",
      "Description": "VPC Peer CIDR 3",
      "AllowedPattern": "^(([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2})?$",
      "ConstraintDescription": "Valid CIDR or empty"
    },
    "Peer4VpcCidr": {
      "Type": "String",
      "Default": "",
      "Description": "VPC Peer CIDR 4",
      "AllowedPattern": "^(([0-9]{1,4}\\.){4}[0-9]{1,4}/[0-9]{1,2})?$",
      "ConstraintDescription": "Valid CIDR or empty"
    },
    "ElastiCacheAz2Cidr": {
      "Type": "String",
      "Default": "10.0.21.0/24",
      "Description": "ElastiCache AZ2 CIDR",
      "AllowedPattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2}$",
      "ConstraintDescription": "Valid CIDR"
    },
    "MultiAz": {
      "Type": "String",
      "Default": "true",
      "Description": "Deploy multiple AZs",
      "AllowedValues": [ "true", "false" ]
    }
  },

  "Outputs": {
    "ElastiCacheBrokerAccessKeyId": {
      "Description": "ElastiCache Broker Access Key Id",
      "Condition": "CreateElastiCacheInfrastructure",
      "Value": { "Ref": "ElastiCacheBrokerAccessKey" }
    },
    "ElastiCacheBrokerSecretAccessKey": {
      "Description": "ElastiCache Broker Access Key",
      "Condition": "CreateElastiCacheInfrastructure",
      "Value": { "Fn::GetAtt": [ "ElastiCacheBrokerAccessKey", "SecretAccessKey" ] }
    },
    "ElastiCacheSubnetGroup": {
      "Description": "ElastiCache Subnet Group",
      "Condition": "CreateElastiCacheInfrastructure",
      "Value": { "Ref": "ElastiCacheSubnetGroup" }
    },
    "ElastiCacheBrokerUserName": {
      "Description": "ElastiCache Broker User Name",
      "Condition": "CreateElastiCacheInfrastructure",
      "Value": { "Ref": "ElastiCacheBrokerUser" }
    }
  },

  "Conditions": {
    "CreateElastiCacheInfrastructure": { "Fn::Equals": [ { "Ref": "CreateElastiCacheInfrastructure" }, "true" ] },

    "MultiAzAndCreateElastiCacheInfrastructure": {
      "Fn::And": [
        { "Fn::Equals": [ { "Ref": "MultiAz" }, "true" ] },
        { "Fn::Equals": [ { "Ref": "CreateElastiCacheInfrastructure" }, "true" ] }
      ]
    },
    "PeerVpc": {
      "Fn::Or": [
        {
          "Fn::And": [
            { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer1VpcId" }, "" ] } ] },
            { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer1OwnerId" }, "" ] } ] },
            { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer1RoleArn" }, "" ] } ] },
            { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer1VpcCidr" }, "" ] } ] }
          ]
        },
        {
          "Fn::And": [
            { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer2VpcId" }, "" ] } ] },
            { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer2OwnerId" }, "" ] } ] },
            { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer2RoleArn" }, "" ] } ] },
            { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer2VpcCidr" }, "" ] } ] }
          ]
        },
        {
          "Fn::And": [
            { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer3VpcId" }, "" ] } ] },
            { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer3OwnerId" }, "" ] } ] },
            { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer3RoleArn" }, "" ] } ] },
            { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer3VpcCidr" }, "" ] } ] }
          ]
        },
        {
          "Fn::And": [
            { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer4VpcId" }, "" ] } ] },
            { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer4OwnerId" }, "" ] } ] },
            { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer4RoleArn" }, "" ] } ] },
            { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer4VpcCidr" }, "" ] } ] }
          ]
        }
      ]
    }
  },

  "Resources": {
    "ElastiCacheAz1Subnet": {
      "Type": "AWS::EC2::Subnet",
      "Condition": "CreateElastiCacheInfrastructure",
      "Properties": {
        "AvailabilityZone": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-AwsAvailabilityZone1" } },
        "CidrBlock": { "Ref": "ElastiCacheAz1Cidr" },
        "MapPublicIpOnLaunch": false,
        "VpcId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-CloudFoundryVpc" } },
        "Tags": [
          { "Key": "Name", "Value": { "Fn::Sub": "${DeploymentName}:ElastiCacheAz1Subnet" } },
          { "Key": "Deployment", "Value": { "Ref": "DeploymentName" } }
        ]
      }
    },
    "ElastiCacheAz2Subnet": {
      "Type": "AWS::EC2::Subnet",
      "Condition": "CreateElastiCacheInfrastructure",
      "Properties": {
        "AvailabilityZone": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-AwsAvailabilityZone2" } },
        "CidrBlock": { "Ref": "ElastiCacheAz2Cidr" },
        "MapPublicIpOnLaunch": false,
        "VpcId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-CloudFoundryVpc" } },
        "Tags": [
          { "Key": "Name", "Value": { "Fn::Sub": "${DeploymentName}:ElastiCacheAz2Subnet" } },
          { "Key": "Deployment", "Value": { "Ref": "DeploymentName" } }
        ]
      }
    },

    "ElastiCacheSubnetGroup": {
      "Type": "AWS::ElastiCache::SubnetGroup",
      "Condition": "CreateElastiCacheInfrastructure",
      "Properties": {
        "Description": "ElastiCache Subnet Group",
        "SubnetIds": [
          { "Ref": "ElastiCacheAz1Subnet" },
          { "Ref": "ElastiCacheAz2Subnet" }
        ] 
      } 
    },

    "ElastiCacheAz1SubnetRouteTableAssociaion": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Condition": "PeerVpc",
      "Properties": {
        "SubnetId": { "Ref": "ElastiCacheAz1Subnet" },
        "RouteTableId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-VpcPeeringOnlyRouteTable" } }
      }
    },
    "ElastiCacheAz2SubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Condition": "PeerVpc",
      "Properties": {
        "SubnetId": { "Ref": "ElastiCacheAz2Subnet" },
        "RouteTableId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-VpcPeeringOnlyRouteTable" } }
      }
    },

    "ElastiCacheBrokerUser": {
      "Type": "AWS::IAM::User",
      "Condition": "CreateElastiCacheInfrastructure",
      "Properties": {
        "Groups": [
          { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DeploymentIamGroup" } }
        ],
        "Path": { "Fn::Sub": "/Cloudfoundry/Cloudformation/${DeploymentName}/" },
        "Policies": [
          {
            "PolicyName": { "Fn::Sub": "${DeploymentName}-CfElastiCachePolicy" },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": [
                    "elasticache:CreateCacheCluster",
                    "elasticache:CreateReplicationGroup",
                    "elasticache:DeleteCacheCluster",
                    "elasticache:DescribeCacheClusters",
                    "elasticache:ModifyCacheCluster",
                    "elasticache:RebootCacheCluster"
                  ],
                  "Effect": "Allow",
                  "Resource": { "Fn::Sub": "arn:aws:elasticache:${AWS::Region}:::*" }
                },
                {
                  "Action": [
                    "iam:GetUser"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "ElastiCacheBrokerAccessKey": {
      "Type": "AWS::IAM::AccessKey",
      "Condition": "CreateElastiCacheInfrastructure",
      "Properties": {
        "UserName": { "Ref": "ElastiCacheBrokerUser" }
      }
    }
  }
}
