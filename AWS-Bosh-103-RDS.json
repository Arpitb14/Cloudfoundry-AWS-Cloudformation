{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AWS CloudFormation Bosh",

  "Parameters": {
    "DeploymentName": {
      "Type": "String",
      "Description": "Deployment Name",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern": "^([A-Za-z0-9]+[A-Za-z0-9-]?)+[A-Za-z0-9]$",
      "ConstraintDescription": "Must be a valid domain label matching /^([A-Za-z0-9]+[A-Za-z0-9-])+[A-Za-z0-9]$/"
    },
    "RdsAz1Cidr": {
      "Type": "String",
      "Default": "10.0.60.0/24",
      "Description": "RDS AZ1 CIDR",
      "AllowedPattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2}$",
      "ConstraintDescription": "Valid CIDR"
    },
    "RdsAz2Cidr": {
      "Type": "String",
      "Default": "10.0.61.0/24",
      "Description": "RDS AZ2 CIDR",
      "AllowedPattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2}$",
      "ConstraintDescription": "Valid CIDR"
    },

    "DeployRdsAppsInstance": {
      "Type": "String",
      "Default": "true",
      "Description": "Deploy Apps RDS Instance",
      "AllowedValues": [ "true", "false" ]
    },
    "DeployRdsCfInstance": {
      "Type": "String",
      "Default": "true",
      "Description": "Deploy Cf RDS Instance",
      "AllowedValues": [ "true", "false" ]
    },
    "RdsAppsInstancePreferredBackupWindow": {
      "Type": "String",
      "Default": "01:00-04:00",
      "Description": "RDS Preferred backup window",
      "AllowedPattern": "^([0-1][0-9]|2[0-3]):[0-5][0-9]-([0-1][0-9]|2[0-3]):[0-5][0-9]$",
      "ConstraintDescription": "hh24:mi-hh24:mi, eg 23:59-01:24"
    },
    "RdsAppsInstancePreferredMaintenanceWindow": {
      "Type": "String",
      "Default": "Mon:04:00-Mon:06:00",
      "Description": "Cloudfoundry RDS Preferred maintenance window",
      "AllowedPattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun):([0-1][0-9]|2[0-3]):[0-5][0-9]-(Mon|Tue|Wed|Thu|Fri|Sat|Sun):([0-1][0-9]|2[0-3]):[0-5][0-9]$",
      "ConstraintDescription": "ddd:hh24:mi-hh24:mi, eg Mon:23:59-Tue:01:24"
    },
    "RdsAppsInstanceBackupRetentionPeriod": {
      "Type": "Number",
      "Description": "RDS Apps Instnace Backup Retention Period",
      "Default": "90",
      "MinValue": "5",
      "MaxValue": "3650"
    },
    "RdsAppsInstanceEngine": {
      "Type": "String",
      "Default": "postgres",
      "Description": "Apps RDS Engine",
      "AllowedValues": [
        "postgres"
      ]
    },
    "RdsAppsInstanceSnapshotIdentifier": {
      "Type": "String",
      "Default": "",
      "Description": "Apps RDS snapshot identifier - for restores",
      "AllowedPattern": "^([a-z0-9:.-]+)?$",
      "ConstraintDescription": "AWS RDS snapshot identifier, or empty to create a new database"
    },
    "RdsAppsInstanceSize": {
      "Type": "String",
      "Default": "db.t2.medium",
      "Description": "Apps RDS Size (instance size affects max_connections)",
      "AllowedValues": [
        "db.t2.micro",
        "db.t2.small",
        "db.t2.medium",
        "db.t2.large",
        "db.m4.large",
        "db.m4.xlarge"
      ]
    },
    "RdsAppsInstanceStorageSize": {
      "Type": "Number",
      "Description": "RDS Apps Instance Storage Size",
      "Default": "25",
      "MinValue": "5",
      "MaxValue": "6144"
    },
    "RdsAppsInstanceName": {
      "Type": "String",
      "Description" : "Apps RDS Instance Name",
      "Default": "cf_instance_rds_database",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern": "^[A-Za-z][^\"@]*$",
      "ConstraintDescription": "Alphanumeric characters only and must start with a letter"
    },
    "RdsAppsInstanceUsername": {
      "Type": "String",
      "Default": "postgres",
      "Description": "Apps RDS user",
      "MinLength": "1",
      "MaxLength": "63",
      "AllowedPattern": "^[A-Za-z][A-Za-z0-9]+$",
      "ConstraintDescription": "Alphanumeric characters only and must start with a letter"
    },
    "RdsAppsInstancePassword": {
      "Type": "String",
      "Default": "password",
      "Description": "Apps RDS password",
      "MinLength": "1",
      "MaxLength": "63",
      "AllowedPattern": "^[^\"@]+$",
      "ConstraintDescription": "Can be any printable ASCII character except \"/\", \"\"\", or \"@\""
    },
    "RdsCfInstancePreferredBackupWindow": {
      "Type": "String",
      "Default": "01:00-04:00",
      "Description": "RDS Preferred backup window",
      "AllowedPattern": "^([0-1][0-9]|2[0-3]):[0-5][0-9]-([0-1][0-9]|2[0-3]):[0-5][0-9]$",
      "ConstraintDescription": "hh24:mi-hh24:mi, eg 23:59-01:24"
    },
    "RdsCfInstancePreferredMaintenanceWindow": {
      "Type": "String",
      "Default": "Mon:04:00-Mon:06:00",
      "Description": "Cloudfoundry RDS Preferred maintenance window",
      "AllowedPattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun):([0-1][0-9]|2[0-3]):[0-5][0-9]-(Mon|Tue|Wed|Thu|Fri|Sat|Sun):([0-1][0-9]|2[0-3]):[0-5][0-9]$",
      "ConstraintDescription": "ddd:hh24:mi-hh24:mi, eg Mon:23:59-Tue:01:24"
    },
    "RdsCfInstanceBackupRetentionPeriod": {
      "Type": "Number",
      "Description": "RDS CF Instnace Backup Retention Period",
      "Default": "90",
      "MinValue": "5",
      "MaxValue": "3650"
    },
    "RdsCfInstanceEngine": {
      "Type": "String",
      "Default": "postgres",
      "Description": "Cloudfoundry RDS Engine",
      "AllowedValues": [
        "postgres"
      ]
    },
    "RdsCfInstanceSnapshotIdentifier": {
      "Type": "String",
      "Default": "",
      "Description": "Cloudfoundry RDS snapshot identifier - for restores",
      "AllowedPattern": "^([a-z0-9:.-]+)?$",
      "ConstraintDescription": "AWS RDS snapshot identifier, or empty to create a new database"
    },
    "RdsCfInstanceSize": {
      "Type": "String",
      "Default": "db.t2.medium",
      "Description": "Cloudfoundry RDS Size (instance size affects max_connections)",
      "AllowedValues": [
        "db.t2.micro",
        "db.t2.small",
        "db.t2.medium",
        "db.t2.large",
        "db.m4.large",
        "db.m4.xlarge"
      ]
    },
    "RdsCfInstanceStorageSize": {
      "Type": "Number",
      "Default": "25",
      "Description": "RDS CF Instance Storage Size",
      "MinValue": "5",
      "MaxValue": "6144"
    },
    "RdsCfInstanceName": {
      "Type": "String",
      "Default": "cf_instance_rds_database",
      "Description" : "Cloudfoundry RDS Instance Name",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern": "^[A-Za-z][^\"@]*$",
      "ConstraintDescription": "Alphanumeric characters only and must start with a letter"
    },
    "RdsCfInstanceUsername": {
      "Type": "String",
      "Default": "postgres",
      "Description": "Cloudfoundry RDS user",
      "MinLength": "1",
      "MaxLength": "63",
      "AllowedPattern": "^[A-Za-z][A-Za-z0-9]+$",
      "ConstraintDescription": "Alphanumeric characters only and must start with a letter"
    },
    "RdsCfInstancePassword": {
      "Type": "String",
      "Default": "password",
      "Description": "Cloudfoundry RDS password",
      "MinLength": "1",
      "MaxLength": "63",
      "AllowedPattern": "^[^\"@]+$",
      "ConstraintDescription": "Can be any printable ASCII character except \"/\", \"\"\", or \"@\""
    },
    "MultiAz": {
      "Type": "String",
      "Default": "true",
      "Description": "Deploy multiple AZs",
      "AllowedValues": [ "true", "false" ]
    }
  },

  "Outputs": {
    "RdsAz1Cidr": {
      "Description": "RDS AZ1 CIDR",
      "Condition": "CreateRdsInfrastructure",
      "Value": { "Ref": "RdsAz1Cidr" },
      "Export": { "Name": { "Fn::Sub": "${DeploymentName}-RdsAz1Cidr" } }
    },
    "RdsAz2Cidr": {
      "Description": "RDS AZ2 CIDR",
      "Condition": "CreateRdsInfrastructure",
      "Value": { "Ref": "RdsAz2Cidr" },
      "Export": { "Name": { "Fn::Sub": "${DeploymentName}-RdsAz2Cidr" } }
    },
    "RdsAz1CidrPrefix": {
      "Description": "RDS AZ1 CIDR Prefix",
      "Condition": "CreateRdsInfrastructure",
      "Value": {
        "Fn::Join": [
          ".", [
            { "Fn::Select": [ "0", { "Fn::Split": [ ".", { "Ref": "RdsAz1Cidr" } ] } ] },
            { "Fn::Select": [ "1", { "Fn::Split": [ ".", { "Ref": "RdsAz1Cidr" } ] } ] },
            { "Fn::Select": [ "2", { "Fn::Split": [ ".", { "Ref": "RdsAz1Cidr" } ] } ] }
          ]
        ]
      },
      "Export": { "Name": { "Fn::Sub": "${DeploymentName}-RdsAz1CidrPrefix" } }
    },
    "RdsAz2CidrPrefix": {
      "Description": "RDS AZ2 CIDR Prefix",
      "Condition": "CreateRdsInfrastructure",
      "Value": {
        "Fn::Join": [
          ".", [
            { "Fn::Select": [ "0", { "Fn::Split": [ ".", { "Ref": "RdsAz2Cidr" } ] } ] },
            { "Fn::Select": [ "1", { "Fn::Split": [ ".", { "Ref": "RdsAz2Cidr" } ] } ] },
            { "Fn::Select": [ "2", { "Fn::Split": [ ".", { "Ref": "RdsAz2Cidr" } ] } ] }
          ]
        ]
      },
      "Export": { "Name": { "Fn::Sub": "${DeploymentName}-RdsAz2CidrPrefix" } }
    },
    "RdsAz1DefaultRoute": {
      "Description": "RDS AZ1 Default Route",
      "Condition": "CreateRdsInfrastructure",
      "Value": {
        "Fn::Join": [
          ".", [
            { "Fn::Select": [ "0", { "Fn::Split": [ ".", { "Ref": "RdsAz1Cidr" } ] } ] },
            { "Fn::Select": [ "1", { "Fn::Split": [ ".", { "Ref": "RdsAz1Cidr" } ] } ] },
            { "Fn::Select": [ "2", { "Fn::Split": [ ".", { "Ref": "RdsAz1Cidr" } ] } ] },
            "1"
          ]
        ]
      },
      "Export": { "Name": { "Fn::Sub": "${DeploymentName}-RdsAz1DefaultRoute" } }
    },
    "RdsAz2DefaultRoute": {
      "Description": "RDS AZ1 Default Route",
      "Condition": "CreateRdsInfrastructure",
      "Value": {
        "Fn::Join": [
          ".", [
            { "Fn::Select": [ "0", { "Fn::Split": [ ".", { "Ref": "RdsAz2Cidr" } ] } ] },
            { "Fn::Select": [ "1", { "Fn::Split": [ ".", { "Ref": "RdsAz2Cidr" } ] } ] },
            { "Fn::Select": [ "2", { "Fn::Split": [ ".", { "Ref": "RdsAz2Cidr" } ] } ] },
            "1"
          ]
        ]
      },
      "Export": { "Name": { "Fn::Sub": "${DeploymentName}-RdsAz2DefaultRoute" } }
    },

    "RdsSubnetGroup": {
      "Description": "RDS Database Subnet Group",
      "Condition": "CreateRdsInfrastructure",
      "Value": { "Ref": "RdsSubnetGroup" }
    },
    "RdsSecurityGroup": {
      "Description": "RDS Database Security Group",
      "Condition": "CreateRdsInfrastructure",
      "Value": { "Ref": "RdsSecurityGroup" }
    },
    "RdsAppsInstanceAddress": {
      "Description": "Applications  RDS Access Address",
      "Condition": "DeployRdsAppsInstance",
      "Value": { "Fn::GetAtt": [ "RdsAppsInstance", "Endpoint.Address" ] }
    },
    "RdsAppsInstancePort": {
      "Description": "Applications  RDS Port",
      "Condition": "DeployRdsAppsInstance",
      "Value": { "Fn::GetAtt": [ "RdsAppsInstance", "Endpoint.Port" ] }
    },
    "RdsCfInstanceAddress": {
      "Description": "Cloudfoundry RDS Access Address",
      "Condition": "DeployRdsCfInstance",
      "Value": { "Fn::GetAtt": [ "RdsCfInstance", "Endpoint.Address" ] }
    },
    "RdsCfInstancePort": {
      "Description": "Cloudfoundry RDS Port",
      "Condition": "DeployRdsCfInstance",
      "Value": { "Fn::GetAtt": [ "RdsCfInstance", "Endpoint.Port" ] }
    },
    "RdsBrokerAccessKeyId": {
      "Description": "RDS Broker Access Key Id",
      "Condition": "DeployRdsAppsInstance",
      "Value": { "Ref": "RdsBrokerAccessKey" }
    },
    "RdsBrokerAccessKey": {
      "Description": "RDS Broker Access Key",
      "Condition": "DeployRdsAppsInstance",
      "Value": { "Fn::GetAtt": [ "RdsBrokerAccessKey", "SecretAccessKey" ] }
    },
    "RdsBrokerUserName": {
      "Description": "RDS Broker User Name",
      "Condition": "DeployRdsAppsInstance",
      "Value": { "Ref": "RdsBrokerUser" }
    },

    "RdsAppsInstanceDns": {
      "Description": "RDS Apps Instance DNS Name",
      "Condition": "DeployRdsAppsInstance",
      "Value": { "Fn::Join": [ ".", [ "app-rds", { "Ref": "DeploymentName" }, { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-HostedZone" } } ] ] }
    },
    "RdsCfsInstanceDns": {
      "Description": "RDS CF Instance DNS Name",
      "Condition": "DeployRdsCfInstance",
      "Value": { "Fn::Join": [ ".", [ "cf-rds", { "Ref": "DeploymentName" }, { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-HostedZone" } } ] ] }
    },
    "RdsLambaCreateAppsDbArn": {
      "Description": "RDS CF Instance DNS Name",
      "Condition": "DeployRdsAppsInstance",
      "Value": { "Fn::GetAtt": [ "RdsLambaCreateAppsDb", "Arn" ] }
    }
  },

  "Conditions": {
    "CreateRdsInfrastructure": {
      "Fn::Or": [
        { "Fn::Equals": [ { "Ref": "DeployRdsAppsInstance" }, "true" ] },
        { "Fn::Equals": [ { "Ref": "DeployRdsCfInstance" }, "true" ] }
      ]
    },
    "DeployRdsAppsInstance": { "Fn::Equals": [ { "Ref": "DeployRdsAppsInstance" }, "true" ] },
    "DeployRdsCfInstance": { "Fn::Equals": [ { "Ref": "DeployRdsCfInstance" }, "true" ] },

    "MultiAz": { "Fn::Equals": [ { "Ref": "MultiAz" }, "true" ] },
    "MultiAzAndDeployRdsAppsInstance": {
      "Fn::And": [
        { "Fn::Equals": [ { "Ref": "MultiAz" }, "true" ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "RdsAppsInstanceSize" }, "NONE" ] } ] }
      ]
    },
    "MultiAzAndDeployRdsCfInstance": {
      "Fn::And": [
        { "Fn::Equals": [ { "Ref": "MultiAz" }, "true" ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "RdsCfInstanceSize" }, "NONE" ] } ] }
      ]
    },

    "SingleAz": { "Fn::Equals": [ { "Ref": "MultiAz" }, "false" ] },
    "SingleAzAndDeployRdsAppsInstance": {
      "Fn::And": [
        { "Fn::Equals": [ { "Ref": "MultiAz" }, "true" ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "RdsAppsInstanceSize" }, "NONE" ] } ] }
      ]
    },
    "SingleAzAndDeployRdsCfInstance": {
      "Fn::And": [
        { "Fn::Equals": [ { "Ref": "MultiAz" }, "true" ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "RdsCfInstanceSize" }, "NONE" ] } ] }
      ]
    }
  },

  "Mappings": {
    "RegionAmiMap": {
      "eu-central-1": { "HVM": "ami-b968bad6", "PV": "ami-ba68bad5" },
      "eu-west-1": { "HVM": "ami-01ccc867", "PV": "ami-d1c0c4b7" },
      "eu-west-2": { "HVM": "ami-b6daced2" }
    }
  },

  "Resources": {
    "StackProtection": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "StackArn": { "Ref": "AWS::StackId" },
          "StackProtectionGroup": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-StackProtectionGroup" } },
          "StackDeleteAllowDeny": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-StackDeleteAllowDeny" } },
          "StackUpdateAllowDeny": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-StackUpdateAllowDeny" } }
        },
        "TemplateURL": {
          "Fn::Join": [
            "/", [
              {
                "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-preamble-TemplatesBucketHttpUrl" }
              },
              "Templates",
              "Stack-Protection.json"
            ]
          ]
        }
      }
    },
    "RdsAz1Subnet": {
      "Type": "AWS::EC2::Subnet",
      "Condition": "CreateRdsInfrastructure",
      "Properties": {
        "AvailabilityZone": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-AwsAvailabilityZone1" } },
        "CidrBlock": { "Ref": "RdsAz1Cidr" },
        "MapPublicIpOnLaunch": false,
        "VpcId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-CloudFoundryVpc" } },
        "Tags": [
          { "Key": "Name", "Value": { "Fn::Sub": "${DeploymentName}:RdsAz1Subnet" } },
          { "Key": "Deployment", "Value": { "Ref": "DeploymentName" } }
        ]
      }
    },
    "RdsAz2Subnet": {
      "Type": "AWS::EC2::Subnet",
      "Condition": "CreateRdsInfrastructure",
      "Properties": {
        "AvailabilityZone": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-AwsAvailabilityZone2" } },
        "CidrBlock": { "Ref": "RdsAz2Cidr" },
        "MapPublicIpOnLaunch": false,
        "VpcId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-CloudFoundryVpc" } },
        "Tags": [
          { "Key": "Name", "Value": { "Fn::Sub": "${DeploymentName}:RdsAz2Subnet" } },
          { "Key": "Deployment", "Value": { "Ref": "DeploymentName" } }
        ]
      }
    },

    "RdsSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Condition": "CreateRdsInfrastructure",
      "Properties": {
        "GroupDescription": "RDS Security Group",
        "VpcId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-CloudFoundryVpc" } },
        "SecurityGroupEgress": [
          { "CidrIp": "0.0.0.0/0", "FromPort": "0", "ToPort": "65535", "IpProtocol": "-1" }
        ],
        "SecurityGroupIngress": [
          { "CidrIp": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-VpcCidr" } }, "FromPort": "0", "ToPort": "65535" , "IpProtocol": "-1" }
        ],
        "Tags": [
          { "Key": "Name", "Value": { "Fn::Sub": "${DeploymentName}:RdsSecurityGroup" } },
          { "Key": "Deployment", "Value": { "Ref": "DeploymentName" } }
        ]
      }
    },
    "RdsLambdaSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Condition": "CreateRdsInfrastructure",
      "Properties": {
        "GroupDescription": "RDS Lambda Security Group",
        "VpcId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-CloudFoundryVpc" } },
        "SecurityGroupEgress": [
          {
            "CidrIp": { "Ref": "RdsAz1Cidr" },
            "FromPort": { "Fn::GetAtt": [ "RdsAppsInstance", "Endpoint.Port" ] },
            "ToPort": { "Fn::GetAtt": [ "RdsAppsInstance", "Endpoint.Port" ] },
            "IpProtocol": "tcp"
          },
          {
            "CidrIp": { "Ref": "RdsAz2Cidr" },
            "FromPort": { "Fn::GetAtt": [ "RdsAppsInstance", "Endpoint.Port" ] },
            "ToPort": { "Fn::GetAtt": [ "RdsAppsInstance", "Endpoint.Port" ] },
            "IpProtocol": "tcp"
          },
          {
            "CidrIp": { "Ref": "RdsAz1Cidr" },
            "FromPort": { "Fn::GetAtt": [ "RdsCfInstance", "Endpoint.Port" ] },
            "ToPort": { "Fn::GetAtt": [ "RdsCfInstance", "Endpoint.Port" ] },
            "IpProtocol": "tcp"
          },
          {
            "CidrIp": { "Ref": "RdsAz2Cidr" },
            "FromPort": { "Fn::GetAtt": [ "RdsCfInstance", "Endpoint.Port" ] },
            "ToPort": { "Fn::GetAtt": [ "RdsCfInstance", "Endpoint.Port" ] },
            "IpProtocol": "tcp"
          }
        ],
        "Tags": [
          { "Key": "Name", "Value": { "Fn::Sub": "${DeploymentName}:RdsLambdaSecurityGroup" } },
          { "Key": "Deployment", "Value": { "Ref": "DeploymentName" } }
        ]
      }
    },

    "RdsSubnetGroup": {
      "Type" : "AWS::RDS::DBSubnetGroup",
      "Condition": "CreateRdsInfrastructure",
      "Properties" : {
        "DBSubnetGroupDescription" : "RDS Subnet Group",
        "SubnetIds" : [
          { "Ref": "RdsAz1Subnet" },
          { "Ref": "RdsAz2Subnet" }
        ],
        "Tags": [
          { "Key": "Name", "Value": { "Fn::Sub": "${DeploymentName}:RdsSubnetGroup" } },
          { "Key": "Deployment", "Value": { "Ref": "DeploymentName" } }
        ]
      }
    },

    "RdsAppsInstance": {
      "Type" : "AWS::RDS::DBInstance",
      "Condition": "SingleAzAndDeployRdsAppsInstance",
      "Properties": {
        "DBInstanceIdentifier": { "Fn::Sub": "${DeploymentName}-ApplicationDB" },
        "DBInstanceClass": { "Ref": "RdsAppsInstanceSize" },
        "AllocatedStorage": { "Ref": "RdsAppsInstanceStorageSize" },
        "AvailabilityZone": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-AwsAvailabilityZone1" } },
        "BackupRetentionPeriod": { "Ref": "RdsAppsInstanceBackupRetentionPeriod" },
        "CopyTagsToSnapshot": "true",
        "Engine": { "Ref": "RdsAppsInstanceEngine" },
        "DBSubnetGroupName": { "Ref": "RdsSubnetGroup" },
        "DBSnapshotIdentifier": { "Ref": "RdsAppsInstanceSnapshotIdentifier" },
        "MasterUsername": { "Ref": "RdsAppsInstanceUsername" },
        "MasterUserPassword": { "Ref": "RdsAppsInstancePassword" },
        "PreferredBackupWindow": { "Ref": "RdsAppsInstancePreferredBackupWindow" },
        "PreferredMaintenanceWindow": { "Ref": "RdsAppsInstancePreferredMaintenanceWindow" },
        "VPCSecurityGroups": [ { "Ref": "RdsSecurityGroup" } ],
        "Tags": [
          { "Key": "Name", "Value": { "Fn::Sub": "${DeploymentName}:RdsAppsInstance" } },
          { "Key": "Deployment", "Value": { "Ref": "DeploymentName" } }
        ]
      }
    },
    "RdsAppsInstance": {
      "Type" : "AWS::RDS::DBInstance",
      "Condition": "MultiAzAndDeployRdsAppsInstance",
      "Properties": {
        "DBInstanceIdentifier": { "Fn::Sub": "${DeploymentName}-ApplicationDB" },
        "DBInstanceClass": { "Ref": "RdsAppsInstanceSize" },
        "AllocatedStorage": { "Ref": "RdsAppsInstanceStorageSize" },
        "BackupRetentionPeriod": { "Ref": "RdsAppsInstanceBackupRetentionPeriod" },
        "CopyTagsToSnapshot": "true",
        "DBSubnetGroupName": { "Ref": "RdsSubnetGroup" },
        "DBSnapshotIdentifier": { "Ref": "RdsAppsInstanceSnapshotIdentifier" },
        "Engine": { "Ref": "RdsAppsInstanceEngine" },
        "MasterUsername": { "Ref": "RdsAppsInstanceUsername" },
        "MasterUserPassword": { "Ref": "RdsAppsInstancePassword" },
        "MultiAZ": "true",
        "PreferredBackupWindow": { "Ref": "RdsAppsInstancePreferredBackupWindow" },
        "PreferredMaintenanceWindow": { "Ref": "RdsAppsInstancePreferredMaintenanceWindow" },
        "VPCSecurityGroups": [ { "Ref": "RdsSecurityGroup" } ],
        "Tags": [
          { "Key": "Name", "Value": { "Fn::Sub": "${DeploymentName}:RdsAppsInstance" } },
          { "Key": "Deployment", "Value": { "Ref": "DeploymentName" } }
        ]
      }
    },
    "RdsCfInstance": {
      "Type" : "AWS::RDS::DBInstance",
      "Condition": "SingleAzAndDeployRdsCfInstance",
      "Properties": {
        "DBInstanceIdentifier": { "Fn::Sub": "${DeploymentName}-CloudfoundryDB" },
        "DBInstanceClass": { "Ref": "RdsCfInstanceSize" },
        "AllocatedStorage": { "Ref": "RdsCfInstanceStorageSize" },
        "AvailabilityZone": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-AwsAvailabilityZone1" } },
        "BackupRetentionPeriod": { "Ref": "RdsCfInstanceBackupRetentionPeriod" },
        "CopyTagsToSnapshot": "true",
        "Engine": { "Ref": "RdsCfInstanceEngine" },
        "DBSubnetGroupName": { "Ref": "RdsSubnetGroup" },
        "DBSnapshotIdentifier": { "Ref": "RdsCfInstanceSnapshotIdentifier" },
        "MasterUsername": { "Ref": "RdsCfInstanceUsername" },
        "MasterUserPassword": { "Ref": "RdsCfInstancePassword" },
        "PreferredBackupWindow": { "Ref": "RdsCfPreferredBackupWindow" },
        "PreferredMaintenanceWindow": { "Ref": "RdsCfInstancePreferredMaintenanceWindow" },
        "VPCSecurityGroups": [ { "Ref": "RdsSecurityGroup" } ],
        "Tags": [
          { "Key": "Name", "Value": { "Fn::Sub": "${DeploymentName}:RdsCfInstance" } },
          { "Key": "Deployment", "Value": { "Ref": "DeploymentName" } }
        ]
      }
    },
    "RdsCfInstance": {
      "Type" : "AWS::RDS::DBInstance",
      "Condition": "MultiAzAndDeployRdsCfInstance",
      "Properties": {
        "DBInstanceIdentifier": { "Fn::Sub": "${DeploymentName}-CloudfoundryDB" },
        "DBInstanceClass": { "Ref": "RdsCfInstanceSize" },
        "AllocatedStorage": { "Ref": "RdsCfInstanceStorageSize" },
        "BackupRetentionPeriod": { "Ref": "RdsCfInstanceBackupRetentionPeriod" },
        "CopyTagsToSnapshot": "true",
        "DBSubnetGroupName": { "Ref": "RdsSubnetGroup" },
        "DBSnapshotIdentifier": { "Ref": "RdsCfInstanceSnapshotIdentifier" },
        "Engine": { "Ref": "RdsCfInstanceEngine" },
        "MasterUsername": { "Ref": "RdsCfInstanceUsername" },
        "MasterUserPassword": { "Ref": "RdsCfInstancePassword" },
        "MultiAZ": "true",
        "PreferredBackupWindow": { "Ref": "RdsCfInstancePreferredBackupWindow" },
        "PreferredMaintenanceWindow": { "Ref": "RdsCfInstancePreferredMaintenanceWindow" },
        "VPCSecurityGroups": [ { "Ref": "RdsSecurityGroup" } ],
        "Tags": [
          { "Key": "Name", "Value": { "Fn::Sub": "${DeploymentName}:RdsCfInstance" } },
          { "Key": "Deployment", "Value": { "Ref": "DeploymentName" } }
        ]
      }
    },

    "RdsBrokerUser": {
      "Type": "AWS::IAM::User",
      "Condition": "DeployRdsAppsInstance",
      "Properties": {
        "Policies": [
          {
            "PolicyName": { "Fn::Sub": "${DeploymentName}-CfRdsPolicy" },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": [
                    "rds:DescribeDBInstances",
                    "rds:CreateDBInstance",
                    "rds:ModifyDBInstance",
                    "rds:DeleteDBInstance",
                    "rds:DescribeDBClusters",
                    "rds:CreateDBCluster",
                    "rds:ModifyDBCluster",
                    "rds:DeleteDBCluster",
                    "rds:AddTagsToResource"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "iam:GetUser"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },

    "RdsBrokerAccessKey": {
      "Type": "AWS::IAM::AccessKey",
      "Condition": "DeployRdsAppsInstance",
      "Properties": {
        "UserName": { "Ref": "RdsBrokerUser" }
      }
    },

    "RdsAppsInstanceDns": {
      "Type": "AWS::Route53::RecordSet",
      "Condition": "DeployRdsAppsInstance",
      "Properties": {
        "HostedZoneName": { "Fn::Join": [ "", [ { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-HostedZone" } }, "." ] ] },
        "Name": { "Fn::Join": [ ".", [ "app-rds", { "Ref": "DeploymentName" }, { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-HostedZone" } } ] ] },
        "TTL": "3600",
        "Type": "CNAME",
        "ResourceRecords": [
          { "Fn::GetAtt": [ "RdsAppsInstance", "Endpoint.Address" ] }
        ]
      }
    },

    "RdsCfInstanceDns": {
      "Type": "AWS::Route53::RecordSet",
      "Condition": "DeployRdsCfInstance",
      "Properties": {
        "HostedZoneName": { "Fn::Join": [ "", [ { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-HostedZone" } }, "." ] ] },
        "Name": { "Fn::Join": [ ".", [ "cf-rds", { "Ref": "DeploymentName" }, { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-HostedZone" } } ] ] },
        "TTL": "3600",
        "Type": "CNAME",
        "ResourceRecords": [
          { "Fn::GetAtt": [ "RdsCfInstance", "Endpoint.Address" ] }
        ]
      }
    },

    "RdsLambaCreateDbRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [ "lambda.amazonaws.com" ]
              },
              "Action": [ "sts:AssumeRole" ] }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "root",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [ "logs:*" ],
                  "Resource": { "Fn::Sub": "arn:aws:logs:${AWS::Region}:*:*" }
                }
              ]
            }
          }
        ]
      }
    },

    "RdsLambaCreateAppsDb": {
      "Type": "AWS::Lambda::Function",
      "Condition": "DeployRdsAppsInstance",
      "Properties": {
        "Description": "Create databases within the Apps RDS Instance",
        "Handler": "create_database_and_user",
        "Role": { "Ref": "RdsLambaCreateDbRole" },
        "Runtime": "python3.6",
        "Timeout": "60",
        "VpcConfig": {
          "SecurityGroupIds": [
            { "Ref": "RdsLambdaSecurityGroup" }
          ],
          "SubnetIds": [
            { "Ref": "RdsAz1Subnet" },
            { "Ref": "RdsAz2Subnet" }
          ]
        },
        "Code": {
          "ZipFile": {
            "Fn::Join": [
              "\n", [
                "import psycopg2",
                "import logging",
                "import sys",
                "",
                {
                  "Fn::Join": [
                    "", [
                      "conn_string = \"",
                      { "Fn::Sub": "host='${RdsAppsInstance.Endpoint.Address}' port='${RdsAppsInstance.Endpoint.Port}'" },
                      " ",
                      { "Fn::Sub": "dbname='postgres' user='${RdsAppsInstanceUsername}' password='${RdsAppsInstancePassword}'" },
                      "\""
                    ]
                  ]
                },
                "def create_database_and_user(event, context)",
                "  try:",
                "    conn = psycopg2.connect(conn_string)",
                "    cursor = conn.cursor()",
                "    try:",
                "      cursor.execute(\"CREATE USER %s\",event['user'])",
                "      try:",
                "        cursor.execute(\"CREATE DATABASE %s OWNER %s\",event['database'],event['user'])",
                "      except Exception as e:",
                "        logging.info('Failed to create database')",
                "    except Exception as e:",
                "      logging.info('Failed to create user')",
                "  except Exception as e:",
                "    logging.info('Failed to connect to Apps RDS instance')"
              ]
            ]
          }
        }
      }
    },
    "RdsLambaCreateCfDb": {
      "Type": "AWS::Lambda::Function",
      "Condition": "DeployRdsCfInstance",
      "Properties": {
        "Description": "Create databases within the Cf RDS Instance",
        "Handler": "create_database_and_user",
        "Role": { "Ref": "RdsLambaCreateDbRole" },
        "Runtime": "python3.6",
        "Timeout": "60",
        "VpcConfig": {
          "SecurityGroupIds": [
            { "Ref": "RdsLambdaSecurityGroup" }
          ],
          "SubnetIds": [
            { "Ref": "RdsAz1Subnet" },
            { "Ref": "RdsAz2Subnet" }
          ]
        },
        "Code": {
          "ZipFile": {
            "Fn::Join": [
              "\n", [
                "import psycopg2",
                "import logging",
                "import sys",
                "",
                {
                  "Fn::Join": [
                    "", [
                      "conn_string = \"",
                      { "Fn::Sub": "host='${RdsCfInstance.Endpoint.Address}' port='${RdsCfInstance.Endpoint.Port}'" },
                      " ",
                      { "Fn::Sub": "dbname='postgres' user='${RdsCfInstanceUsername}' password='${RdsCfInstancePassword}'" },
                      "\""
                    ]
                  ]
                },
                "def create_database_and_user(event, context)",
                "  try:",
                "    conn = psycopg2.connect(conn_string)",
                "    cursor = conn.cursor()",
                "    try:",
                "      cursor.execute(\"CREATE USER %s\",event['user'])",
                "      try:",
                "        cursor.execute(\"CREATE DATABASE %s OWNER %s\",event['database'],event['user'])",
                "      except Exception as e:",
                "        logging.info('Failed to create database')",
                "    except Exception as e:",
                "      logging.info('Failed to create user')",
                "  except Exception as e:",
                "    logging.info('Failed to connect to Apps RDS instance')"
              ]
            ]
          }
        }
      }
    }
  }
}
