{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "VPC Peering",

  "Parameters": {
    "DeploymentName": {
      "Type": "String",
      "Description": "Deployment Name",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern": "^([A-Za-z0-9]+[A-Za-z0-9-]?)+[A-Za-z0-9]$",
      "ConstraintDescription": "Must be a valid domain label matching /^([A-Za-z0-9]+[A-Za-z0-9-])+[A-Za-z0-9]$/"
    },
    "Peer1VpcId": {
      "Type": "String",
      "Default": "",
      "Description": "VPC Peer ID 1",
      "AllowedPattern": "^(vpc-[a-f0-9]{8})?$",
      "ConstraintDescription": "Valid VPC ID or empty"
    },
    "Peer2VpcId": {
      "Type": "String",
      "Default": "",
      "Description": "VPC Peer ID 2",
      "AllowedPattern": "^(vpc-[a-f0-9]{8})?$",
      "ConstraintDescription": "Valid VPC ID or empty"
    },
    "Peer3VpcId": {
      "Type": "String",
      "Default": "",
      "Description": "VPC Peer ID 3",
      "AllowedPattern": "^(vpc-[a-f0-9]{8})?$",
      "ConstraintDescription": "Valid VPC ID or empty"
    },
    "Peer1OwnerId": {
      "Type": "String",
      "Default": "",
      "Description": "Peer 1 Owner Account Id",
      "AllowedPattern": "^[0-9]*$",
      "ConstraintDescription": "Peer Owner Id or empty"
    },
    "Peer2OwnerId": {
      "Type": "String",
      "Default": "",
      "Description": "Peer 2 Owner Account Id",
      "AllowedPattern": "^[0-9]*$",
      "ConstraintDescription": "Valid CIDR or empty"
    },
    "Peer3OwnerId": {
      "Type": "String",
      "Default": "",
      "Description": "Peer 3 Owner Account Id",
      "AllowedPattern": "^[0-9]*$",
      "ConstraintDescription": "Valid CIDR or empty"
    },
    "Peer1RoleArn": {
      "Type": "String",
      "Default": "",
      "Description": "Peer 1 Role ARN",
      "AllowedPattern": "^(arn:aws:iam::[0-9]+:[a-z]*/[A-Za-z0-9-]+)?$",
      "ConstraintDescription": "Peer 1 ARN or empty"
    },
    "Peer2RoleArn": {
      "Type": "String",
      "Default": "",
      "Description": "Peer 2 Role ARN",
      "AllowedPattern": "^(arn:aws:iam::[0-9]+:[a-z]*/[A-Za-z0-9-]+)?$",
      "ConstraintDescription": "Peer 2 ARN or empty"
    },
    "Peer3RoleArn": {
      "Type": "String",
      "Default": "",
      "Description": "Peer 3 Role ARN",
      "AllowedPattern": "^(arn:aws:iam::[0-9]+:[a-z]*/[A-Za-z0-9-]+)?$",
      "ConstraintDescription": "Peer 3 ARN or empty"
    },
    "Peer1VpcCidr": {
      "Type": "String",
      "Default": "",
      "Description": "VPC Peer CIDR 1",
      "AllowedPattern": "^(([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2})?$",
      "ConstraintDescription": "Valid CIDR or empty"
    },
    "Peer2VpcCidr": {
      "Type": "String",
      "Default": "",
      "Description": "VPC Peer CIDR 2",
      "AllowedPattern": "^(([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2})?$",
      "ConstraintDescription": "Valid CIDR or empty"
    },
    "Peer3VpcCidr": {
      "Type": "String",
      "Default": "",
      "Description": "VPC Peer CIDR 3",
      "AllowedPattern": "^(([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2})?$",
      "ConstraintDescription": "Valid CIDR or empty"
    },
    "MultiAz": {
      "Type": "String",
      "Default": "true",
      "Description": "Deploy multiple AZs",
      "AllowedValues": [ "true", "false" ]
    }
  },

  "Outputs": {},

  "Conditions": {
    "Peer1Vpc": {
      "Fn::And": [
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer1VpcId" }, "" ] } ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer1OwnerId" }, "" ] } ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer1RoleArn" }, "" ] } ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer1VpcCidr" }, "" ] } ] }
      ]
    },
    "Peer2Vpc": {
      "Fn::And": [
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer2VpcId" }, "" ] } ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer2OwnerId" }, "" ] } ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer2RoleArn" }, "" ] } ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer2VpcCidr" }, "" ] } ] }
      ]
    },
    "Peer3Vpc": {
      "Fn::And": [
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer3VpcId" }, "" ] } ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer3OwnerId" }, "" ] } ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer3RoleArn" }, "" ] } ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer3VpcCidr" }, "" ] } ] }
      ]
    },
    "MultiAzAndPeer1Vpc": {
      "Fn::And": [
        { "Fn::Equals": [ { "Ref": "MultiAz" }, "true" ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer1VpcId" }, "" ] } ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer1OwnerId" }, "" ] } ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer1RoleArn" }, "" ] } ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer1VpcCidr" }, "" ] } ] }
      ]
    },
    "MultiAzAndPeer2Vpc": {
      "Fn::And": [
        { "Fn::Equals": [ { "Ref": "MultiAz" }, "true" ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer2VpcId" }, "" ] } ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer2OwnerId" }, "" ] } ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer2RoleArn" }, "" ] } ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer2VpcCidr" }, "" ] } ] }
      ]
    },
    "MultiAzAndPeer3Vpc": {
      "Fn::And": [
        { "Fn::Equals": [ { "Ref": "MultiAz" }, "true" ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer3VpcId" }, "" ] } ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer3OwnerId" }, "" ] } ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer3RoleArn" }, "" ] } ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "Peer3VpcCidr" }, "" ] } ] }
      ]
    }
  },

  "Resources": {
    "StackProtection": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "StackArn": { "Ref": "AWS::StackId" },
          "StackProtectionGroup": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-StackProtectionGroup" } },
          "StackDeleteAllowDeny": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-StackDeleteAllowDeny" } },
          "StackUpdateAllowDeny": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-StackUpdateAllowDeny" } }
        },
        "TemplateURL": {
          "Fn::Join": [
            "/", [
              { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-preamble-TemplatesBucketHttpUrl" } },
              "Templates",
              "Stack-Protection.json"
            ]
          ]
        }
      }
    },

    "VpcPeer1": {
      "Type": "AWS::EC2::VPCPeeringConnection",
      "Condition": "Peer1Vpc",
      "Properties": {
        "PeerVpcId": { "Ref": "Peer1VpcId" },
        "PeerOwnerId": { "Ref": "Peer1OwnerId" },
        "PeerRoleArn": { "Ref": "Peer1RoleArn" },
        "VpcId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-CloudFoundryVpc" } },
        "Tags": [
          { "Key": "Name", "Value": { "Fn::Sub": "${DeploymentName}:VpcPeer1" } },
          { "Key": "Deployment", "Value": { "Ref": "DeploymentName" } }
        ]
      }
    },
    "VpcPeer2": {
      "Type": "AWS::EC2::VPCPeeringConnection",
      "Condition": "Peer2Vpc",
      "Properties": {
        "PeerVpcId": { "Ref": "Peer2VpcId" },
        "PeerOwnerId": { "Ref": "Peer2OwnerId" },
        "PeerRoleArn": { "Ref": "Peer2RoleArn" },
        "VpcId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-CloudFoundryVpc" } },
        "Tags": [
          { "Key": "Name", "Value": { "Fn::Sub": "${DeploymentName}:VpcPeer2" } },
          { "Key": "Deployment", "Value": { "Ref": "DeploymentName" } }
        ]
      }
    },
    "VpcPeer3": {
      "Type": "AWS::EC2::VPCPeeringConnection",
      "Condition": "Peer3Vpc",
      "Properties": {
        "VpcId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-CloudFoundryVpc" } },
        "PeerVpcId": { "Ref": "Peer3VpcId" },
        "PeerOwnerId": { "Ref": "Peer3OwnerId" },
        "PeerRoleArn": { "Ref": "Peer3RoleArn" },
        "Tags": [
          { "Key": "Name", "Value": { "Fn::Sub": "${DeploymentName}:VpcPeer3" } },
          { "Key": "Deployment", "Value": { "Ref": "DeploymentName" } }
        ]
      }
    },

    "VpcPeer1DmzRoute": {
      "Type": "AWS::EC2::Route",
      "Condition": "Peer1Vpc",
      "Properties": {
        "DestinationCidrBlock": { "Ref": "Peer1VpcCidr" },
        "RouteTableId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DmzRouteTable" } },
        "VpcPeeringConnectionId": { "Ref": "VpcPeer1" }
      }
    },
    "VpcPeer1PrivateAz1Route": {
      "Type": "AWS::EC2::Route",
      "Condition": "Peer1Vpc",
      "Properties": {
        "DestinationCidrBlock": { "Ref": "Peer1VpcCidr" },
        "RouteTableId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-NatAz1RouteTable" } },
        "VpcPeeringConnectionId": { "Ref": "VpcPeer1" }
      }
    },
    "VpcPeer1PrivateAz2Route": {
      "Type": "AWS::EC2::Route",
      "Condition": "MultiAzAndPeer1Vpc",
      "Properties": {
        "DestinationCidrBlock": { "Ref": "Peer1VpcCidr" },
        "RouteTableId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-NatAz2RouteTable" } },
        "VpcPeeringConnectionId": { "Ref": "VpcPeer1" }
      }
    },
    "VpcPeer1PrivateAz3Route": {
      "Type": "AWS::EC2::Route",
      "Condition": "MultiAzAndPeer1Vpc",
      "Properties": {
        "DestinationCidrBlock": { "Ref": "Peer1VpcCidr" },
        "RouteTableId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-NatAz3RouteTable" } },
        "VpcPeeringConnectionId": { "Ref": "VpcPeer1" }
      }
    },

    "VpcPeer2DmzRoute": {
      "Type": "AWS::EC2::Route",
      "Condition": "Peer2Vpc",
      "Properties": {
        "DestinationCidrBlock": { "Ref": "Peer2VpcCidr" },
        "RouteTableId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DmzRouteTable" } },
        "VpcPeeringConnectionId": { "Ref": "VpcPeer2" }
      }
    },
    "VpcPeer2PrivateAz1Route": {
      "Type": "AWS::EC2::Route",
      "Condition": "Peer2Vpc",
      "Properties": {
        "DestinationCidrBlock": { "Ref": "Peer2VpcCidr" },
        "RouteTableId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-NatAz1RouteTable" } },
        "VpcPeeringConnectionId": { "Ref": "VpcPeer2" }
      }
    },
    "VpcPeer2PrivateAz2Route": {
      "Type": "AWS::EC2::Route",
      "Condition": "MultiAzAndPeer2Vpc",
      "Properties": {
        "DestinationCidrBlock": { "Ref": "Peer2VpcCidr" },
        "RouteTableId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-NatAz2RouteTable" } },
        "VpcPeeringConnectionId": { "Ref": "VpcPeer2" }
      }
    },
    "VpcPeer2PrivateAz3Route": {
      "Type": "AWS::EC2::Route",
      "Condition": "MultiAzAndPeer2Vpc",
      "Properties": {
        "DestinationCidrBlock": { "Ref": "Peer2VpcCidr" },
        "RouteTableId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-NatAz3RouteTable" } },
        "VpcPeeringConnectionId": { "Ref": "VpcPeer2" }
      }
    },

    "VpcPeer3DmzRoute": {
      "Type": "AWS::EC2::Route",
      "Condition": "Peer3Vpc",
      "Properties": {
        "DestinationCidrBlock": { "Ref": "Peer3VpcCidr" },
        "RouteTableId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DmzRouteTable" } },
        "VpcPeeringConnectionId": { "Ref": "VpcPeer3" }
      }
    },
    "VpcPeer3PrivateAz1Route": {
      "Type": "AWS::EC2::Route",
      "Condition": "Peer3Vpc",
      "Properties": {
        "DestinationCidrBlock": { "Ref": "Peer3VpcCidr" },
        "RouteTableId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-NatAz1RouteTable" } },
        "VpcPeeringConnectionId": { "Ref": "VpcPeer3" }
      }
    },
    "VpcPeer3PrivateAz2Route": {
      "Type": "AWS::EC2::Route",
      "Condition": "MultiAzAndPeer3Vpc",
      "Properties": {
        "DestinationCidrBlock": { "Ref": "Peer3VpcCidr" },
        "RouteTableId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-NatAz2RouteTable" } },
        "VpcPeeringConnectionId": { "Ref": "VpcPeer3" }
      }
    },
    "VpcPeer3PrivateAz3Route": {
      "Type": "AWS::EC2::Route",
      "Condition": "MultiAzAndPeer3Vpc",
      "Properties": {
        "DestinationCidrBlock": { "Ref": "Peer3VpcCidr" },
        "RouteTableId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-NatAz3RouteTable" } },
        "VpcPeeringConnectionId": { "Ref": "VpcPeer3" }
      }
    }
  }
}
