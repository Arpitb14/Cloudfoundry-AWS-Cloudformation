{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Elastic Load Balancer",

  "Parameters": {
    "DeploymentName": {
      "Type": "String",
      "Description": "Deployment Name",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern": "^([A-Za-z0-9]+[A-Za-z0-9-]?)+[A-Za-z0-9]$",
      "ConstraintDescription": "Must be a valid domain label matching /^([A-Za-z0-9]+[A-Za-z0-9-])+[A-Za-z0-9]$/"
    },

    "ElbTimeout": {
      "Type": "Number",
      "Default": "60",
      "Description": "ELB Timeout",
      "MinValue": "1",
      "MaxValue": "999"
    },

    "ElbScheme": {
      "Type": "String",
      "Default": "internet-facing",
      "Description": "Internet facing or internal load balancer?",
      "AllowedValues": [ "internet-facing", "internal" ]
    },

    "GenerateElbSslCertificate": {
      "Type": "String",
      "Default": "true",
      "Description": "Generate AWS SSL certificate - requires manual intervention to validate request email",
      "AllowedValues": [ "true", "false" ]
    },
    "ElbSslCertificateArn": {
      "Type": "String",
      "Default": "NONE",
      "Description": "Use pre-loaded SSL certificate",
      "AllowedPattern": "^(arn:aws::iam::[0-9]+:server-certificate/[0-9]+:[A-Za-z0-9-]+|NONE)$",
      "ConstraintDescription": "AWS ACM SSL certificate ARN or NONE"
    },
    "MultiAz": {
      "Type": "String",
      "Default": "true",
      "Description": "Deploy multiple AZs",
      "AllowedValues": [ "true", "false" ]
    },
    "SslValidationDomain": {
      "Type": "String",
      "Default": "",
      "Description": "Domain to send the SSL validation emails to. Should be empty, or a the parent domain of HostedZone",
      "AllowedPattern": "^((([A-Za-z0-9]+[A-Za-z0-9-]?)+[A-Za-z0-9]\\.)+[A-Za-z0-9]{2,})?$",
      "ConstraintDescription": "Must be a valid domain name matching /^(([A-Za-z0-9]+[A-Za-z0-9-]?)+[A-Za-z0-9]\\.)+([A-Za-z0-9]{2,}$/ or empty"
    },
    "DeployElb": {
      "Type": "String",
      "Default": "true",
      "Description": "Deploy External ELB",
      "AllowedValues": [ "true", "false" ]
    }
  },

  "Outputs": {
    "GenerateElbSslCertificate": {
      "Description": "Generate ELB SSL Certificate",
      "Condition": "DeployElb",
      "Value": { "Ref": "GenerateElbSslCertificate" },
      "Export": { "Name": { "Fn::Sub": "${DeploymentName}-GenerateElbSslCertificate" } }
    },
    "ElbSslCertificateArn": {
      "Description": "Use Existing SSL Cerficate for ELB",
      "Condition": "DeployElb",
      "Value": { "Ref": "ElbSslCertificateArn" },
      "Export": { "Name": { "Fn::Sub": "${DeploymentName}-ElbSslCertificateArn" } }
    },
    "ExternalElb": {
      "Description": "External ELB",
      "Condition": "DeployElb",
      "Value": {
        "Fn::If": [
          "GenerateElbSslCertificate",
          { "Ref": "ExternalAcmSslElb" },
          {
            "Fn::If": [
              "UseElbSslCertificateArn",
              { "Ref": "ExternalExistingSslElb" },
              { "Ref": "ExternalPlainTextElb" }
            ]
          }
        ]
      },
      "Export": { "Name": { "Fn::Sub": "${DeploymentName}-ExternalElb" } }
    },
    "ElbDnsName": {
      "Description": "ELB DNS Name",
      "Condition": "DeployElb",
      "Value": {
        "Fn::If": [
          "GenerateElbSslCertificate",
          { "Fn::GetAtt": [ "ExternalAcmSslElb","DNSName" ] },
          {
            "Fn::If": [
              "UseElbSslCertificateArn",
              { "Fn::GetAtt": [ "ExternalExistingSslElb","DNSName" ] },
              { "Fn::GetAtt": [ "ExternalPlainTextElb","DNSName" ] }
            ]
          }
        ]
      },
      "Export": { "Name": { "Fn::Sub": "${DeploymentName}-ElbDnsName" } }
    }
  },

  "Conditions": {
    "DeployElb": { "Fn::Equals": [ { "Ref": "DeployElb" }, "true" ] },

    "GenerateElbSslCertificate": {
      "Fn::And": [
        { "Fn::Equals": [ { "Ref": "DeployElb" }, "true" ] },
        { "Fn::Equals": [ { "Ref": "GenerateElbSslCertificate" }, "true" ] },
	{ "Fn::Equals": [ { "Ref": "ElbSslCertificateArn" }, "NONE" ] }
      ]
    },
    "UseElbSslCertificateArn": {
      "Fn::And": [
        { "Fn::Equals": [ { "Ref": "DeployElb" }, "true" ] },
        { "Fn::Equals": [ { "Ref": "GenerateElbSslCertificate" }, "false" ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ElbSslCertificateArn" }, "NONE" ] } ] }
      ]
    },
    "UseHostedZone": { "Fn::Equals": [ { "Ref": "SslValidationDomain" }, "" ] },
    "PlainTextElb": {
      "Fn::And": [
        { "Fn::Equals": [ { "Ref": "DeployElb" }, "true" ] },
        { "Fn::Equals": [ { "Ref": "GenerateElbSslCertificate" }, "false" ] },
        { "Fn::Equals": [ { "Ref": "ElbSslCertificateArn" }, "NONE" ] }
      ]
    },

    "MultiAz": { "Fn::Equals": [ { "Ref": "MultiAz" }, "true" ] },
    "MultiAzOrElb": {
      "Fn::Or": [
        { "Fn::Equals": [ { "Ref": "DeployElb" }, "true" ] },
        { "Fn::Equals": [ { "Ref": "MultiAz" }, "true" ] }
      ]
    }
  },

  "Resources": {
    "StackProtection": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "StackArn": { "Ref": "AWS::StackId" },
          "StackProtectionGroup": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-StackProtectionGroup" } },
          "StackDeleteAllowDeny": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-StackDeleteAllowDeny" } },
          "StackUpdateAllowDeny": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-StackUpdateAllowDeny" } }
        },
        "TemplateURL": {
          "Fn::Join": [
            "/", [
              { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-preamble-TemplatesBucketHttpUrl" } },
              "Templates",
              "Stack-Protection.json"
            ]
          ]
        }
      }
    },

    "ElbSslCertificate": {
      "Type": "AWS::CertificateManager::Certificate",
      "Condition": "GenerateElbSslCertificate",
      "Properties": {
        "DomainName": {
          "Fn::Join": [
            ".", [
              "*.apps",
              { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DomainName" } }
            ]
          ]
        },
        "SubjectAlternativeNames": [
          {
            "Fn::Join": [
              ".", [
                "*.system",
                { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DomainName" } }
              ]
            ]
          }
        ],
        "DomainValidationOptions" : [
          {
            "DomainName": {
              "Fn::Join": [
                ".", [
                  "*.apps",
                  { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DomainName" } }
                ]
              ]
            },
            "ValidationDomain" : {
              "Fn::If": [
                "UseHostedZone",
		{ "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DomainName" } },
                { "Ref": "SslValidationDomain" }
              ]
            }
          },
          {
            "DomainName": {
              "Fn::Join": [
                ".", [
                  "*.system",
                  { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DomainName" } }
                ]
              ]
            },
            "ValidationDomain" : {
              "Fn::If": [
                "UseHostedZone",
		{ "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DomainName" } },
                { "Ref": "SslValidationDomain" }
              ]
            }
          }
        ],
        "Tags": [
          { "Key": "Name", "Value": { "Fn::Sub": "${DeploymentName}:ElbSslCertificate" } },
          { "Key": "Deployment", "Value": { "Ref": "DeploymentName" } }
        ]
      }
    },

    "ExternalAcmSslElb": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Condition": "GenerateElbSslCertificate",
      "Properties": {
        "Scheme": { "Ref": "ElbScheme" },
        "Subnets": [
          { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DmzAz1Subnet" } },
          { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DmzAz2Subnet" } }
        ],
        "Listeners": [
          { "InstancePort": "80", "InstanceProtocol": "HTTP", "LoadBalancerPort": "80", "Protocol": "HTTP" },
          { "InstancePort": "80", "InstanceProtocol": "HTTP", "LoadBalancerPort": "443", "Protocol": "HTTPS", "SSLCertificateId": { "Ref": "ElbSslCertificate"  } }
	],
        "ConnectionDrainingPolicy": {
          "Enabled" : "true",
          "Timeout" : { "Ref": "ElbTimeout" }
        },
        "SecurityGroups": [ { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-LbSecurityGroup" } } ],
        "Tags": [
          { "Key": "Name", "Value": { "Fn::Sub": "${DeploymentName}:ExternalElb" } },
          { "Key": "Deployment", "Value": { "Ref": "DeploymentName" } }
        ]
      }
    },

    "ExternalExistingSslElb": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Condition": "UseElbSslCertificateArn",
      "Properties": {
        "Scheme": { "Ref": "ElbScheme" },
        "Subnets": [
          { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DmzAz1Subnet" } },
          { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DmzAz2Subnet" } }
        ],
        "Listeners": [
          { "InstancePort": "80", "InstanceProtocol": "HTTP", "LoadBalancerPort": "80", "Protocol": "HTTP" },
          { "InstancePort": "80", "InstanceProtocol": "HTTP", "LoadBalancerPort": "443", "Protocol": "HTTPS", "SSLCertificateId": { "Ref": "ElbSslCertificateArn"  } }
	],
        "ConnectionDrainingPolicy": {
          "Enabled" : "true",
          "Timeout" : { "Ref": "ElbTimeout" }
        },
        "SecurityGroups": [ { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-LbSecurityGroup" } } ],
        "Tags": [
          { "Key": "Name", "Value": { "Fn::Sub": "${DeploymentName}:ExternalElb" } },
          { "Key": "Deployment", "Value": { "Ref": "DeploymentName" } }
        ]
      }
    },
    "ExternalPlainTextElb": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Condition": "PlainTextElb",
      "Properties": {
        "Scheme": { "Ref": "ElbScheme" },
        "Subnets": [
          { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DmzAz1Subnet" } },
          { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DmzAz2Subnet" } }
        ],
        "Listeners": [
          { "InstancePort": "80", "InstanceProtocol": "HTTP", "LoadBalancerPort": "80", "Protocol": "HTTP" }
	],
        "ConnectionDrainingPolicy": {
          "Enabled" : "true",
          "Timeout" : { "Ref": "ElbTimeout" }
        },
        "SecurityGroups": [ { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-LbSecurityGroup" } } ],
        "Tags": [
          { "Key": "Name", "Value": { "Fn::Sub": "${DeploymentName}:ExternalElb" } },
          { "Key": "Deployment", "Value": { "Ref": "DeploymentName" } }
        ]
      }
    }
  }
}
